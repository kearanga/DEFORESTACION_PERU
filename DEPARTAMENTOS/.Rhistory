melted_degradada  |>
group_by(Year) |>
summarise(Areaa= sum(Area)  ) |>
ggplot( aes(x=Year, y=Areaa)) +
theme_bw() +
ylim (0, 2000000)
library(readxl)
library(ggplot2)
library(maps)
library(sf)
library(dplyr)
library(stringr)
library(shiny)
library(readr)
library(reshape2)
library(gganimate)
library(tidyverse)
library(treemap)
link<-"https://raw.githubusercontent.com/kearanga/DEFORESTACION_PERU/main/cobertura.csv"
degradada<-read_csv2(link)
degradada
regiones_peru <- st_read("DEPARTAMENTOS.shp")
setwd("C:/Users/USUARIO/Desktop/trabajo R/DEPARTAMENTOS")
regiones_peru <- st_read("DEPARTAMENTOS.shp")
head(regiones_peru)
degradada <- degradada|>
mutate(macroregion = c("Selva", "Norte", "Sur", "Sur", "Centro", "Norte", "Lima y Callao", "Sur", "Centro", "Centro", "Centro", "Centro", "Norte", "Norte", "Lima y Callao", "Selva", "Selva", "Sur", "Centro", "Norte", "Sur", "Selva", "Sur", "Norte", "Selva"))
# duplicamos el df
degradada_p <- degradada
degradada_dif <- degradada
## crear degradacion % anual ----
## degradada_p = observar el % de degradacion con respecto a la degradacion total en cada año
#creamos la función value_to_percent, para convertir los datos en porcentajes.
value_to_percent <- function(x) {
100 * x / sum(x)
}
# Aplicamos la función para las columnas 2 en adelante
degradada_p[, 2:9] <- apply(degradada_p[, 2:9], 2, value_to_percent)
degradada_p
# Vovlemos el df un df melt
melted_degradada_p <- degradada|>
melt(id.vars = c("Region", "macroregion") , variable.name = "Year", value.name = "Percentaje")
melted_degradada_p
melted_degradada <- degradada |>
melt(id.vars = c("Region", "macroregion"), variable.name = "Year", value.name = "Area")
melted_degradada
## crear variacion anual de degradación ----
## degradada_dif = observar la variacion de degradacion por año
# creamos un loop que calcula la variación entre cada año, usamos un ciclo for que itera desde la segunda columna
# cada iteración consiste en la diferencia de fila actual restando la fila siguiente,
# adicionalmente, el resultado lo crea en una nueva variable llamado dif_[año] a modo
# de ejemplo podemos ver que el primer elemento creado es dif_2012, que corresponde
#a la resta de los datos del año 2012 con el año 2011
for (i in 2:(ncol(degradada_dif)-1)) {
degradada_dif[,paste0("dif_", colnames(degradada_dif)[i+1])] <- degradada_dif[,i+1]-degradada_dif[,i]
}
for (i in 2:(ncol(degradada_dif)-1)) {
degradada_dif[,paste0("dif_", colnames(degradada_dif)[i+1])] <- degradada_dif[,i+1]-degradada_dif[,i]
}
degradada_dif <- degradada_dif |>
select(-"2011")
#Eliminamos en cobertura_dif lo que no nos sirve
degradada_dif <- degradada_dif |>
select( -"2012", -"2013", -"2014", -"2015", -"2016", -"2017", -"2018")
melted_degradada_dif <- degradada_dif|>
melt(id.vars = c("Region", "macroregion"), variable.name = "Year", value.name = "Value")
melted_degradada_dif
degradada_dif
melted_degradada_dif
## georreferenciar ----
# de shapefile seleccionamos regiones y departamento
regiones<-regiones_peru  |>
select("DEPARTAMEN", "geometry")
# Cambiamos región a Upper para que coincida con la información del shapefile y poder hacer el merge
degradada$Region <- str_to_upper(degradada$Region)
## merge
mapa_degradacion <- regiones |>
left_join(degradada, by = c("DEPARTAMEN" = "Region"))
mapa_degradacion
#Cambiamos de nombre a los años debido a que ggplot no lee bien las variables que solo son números
mapa_degradacion <- mapa_degradacion |>
rename("Region" = "DEPARTAMEN", "Datos_2011" = "2011", "Datos_2012" = "2012", "Datos_2013"= "2013", "Datos_2014"= "2014", "Datos_2015"= "2015", "Datos_2016"= "2016", "Datos_2017"= "2017", "Datos_2018"= "2018")
mapa_degradacion
# Gráficos y tablas ----
## Gráfico de calor, Area degradada por año ----
melted_degradada |>
ggplot() +
aes(x = Year, y = Region, fill = Area)+
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_classic() +
labs(title = "Hectareas Degradadas por Departamento y Año")+
transition_manual(Year, cumulative = TRUE)
## Gráfico de calor, % de Area degradada por año ----
##creamos un heatmap o mapa de calor en donde se ven los datos diferenciados por año, con porcentaje
##de suma 100 para cada uno de los años
melted_degradada_p |>
ggplot() +
aes(x = Year, y = Region, fill = Percentaje)+
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_classic() +
labs(title = " % Hectareas Degradadas por Departamento y Año")+
transition_manual(Year, cumulative = TRUE)
## Gráfico de calor, Variación del area degradada por año ----
melted_degradada_dif|>
ggplot() +
aes(x = Year, y = Region, fill = Value)+
geom_tile() +
scale_fill_distiller(palette = "RdBu")+
theme_classic() +
transition_manual(Year, cumulative = TRUE)
## Mapa de calor, Area degradada año 2018 ----
mapa_degradacion |>
ggplot() +
geom_sf(aes(fill = Datos_2018)) +
scale_fill_gradient(low = "yellow", high = "red") +
ggtitle("Área Degradada por Año en Perú 2011") +
theme_void() +
labs(fill="") +
transition_manual(Datos_2011, cumulative = TRUE)
## Mapa de calor, Area degradada por cada año ----
ui <- fluidPage(
titlePanel("Mapa Degradacion en Perú"),
sidebarLayout(
sidebarPanel(
selectInput("year", "Seleccione un año",
c("2011" = "Datos_2011",
"2012" = "Datos_2012",
"2013" = "Datos_2013",
"2014" = "Datos_2014",
"2015" = "Datos_2015",
"2016" = "Datos_2016",
"2017" = "Datos_2017",
"2018" = "Datos_2018"))
),
mainPanel(
plotOutput("map")
)
)
)
server <- function(input, output) {
output$map <- renderPlot({
ggplot(mapa_degradacion) +
geom_sf(aes(fill = get(input$year), geometry = mapa_degradacion$geometry)) +
scale_fill_gradient(low = "white", high = "red") +
ggtitle(paste("Área Degradada por Año en Perú", gsub("año", "", input$year))) +
theme_void()
})
}
shinyApp(ui, server)
melted_degradada  |>
group_by(Year) |>
summarise(Areaa= sum(Area)  )
a <-melted_degradada  |>
group_by(Year) |>
summarise(Areaa= sum(Area)  )
View(a)
a |>
ggplot()+
aes(x=Year, y=Areaa)+
geom_bar()+
transition_reveal(Year)+
labs(title = "Área Total Degradada en Perú")+
shadow_wake(0.5)
a |>
ggplot( aes(x=Year, y=Areaa)) +
theme_bw()
melted_degradada |>
ggplot() +
aes(x = Year, y = Region, fill = Area)+
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_classic() +
labs(title = "Hectareas Degradadas por Departamento y Año")+
transition_manual(Year, cumulative = TRUE)
a |>
ggplot() +
aes(x = Year, y = Region, fill = Area)+
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_classic() +
labs(title = "Hectareas Degradadas por Departamento y Año")+
transition_manual(Year, cumulative = TRUE)
a |>
ggplot() +
aes(x = Year, y = Areaa, fill = Area)+
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_classic() +
labs(title = "Hectareas Degradadas por Departamento y Año")+
transition_manual(Year, cumulative = TRUE)
a |>
ggplot() +
aes(x = Year, y = Areaa, fill = Areaa)+
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_classic() +
labs(title = "Hectareas Degradadas por Departamento y Año")+
transition_manual(Year, cumulative = TRUE)
a |>
ggplot() +
aes(x = Year, y = Areaa, fill = Areaa)+
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
geom_line() +
labs(title = "Hectareas Degradadas por Departamento y Año"
a |>
a |>
ggplot() +
aes(x = Year, y = Areaa, fill = Areaa)+
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
geom_line()
a |>
ggplot() +
aes(x = Year, y = Areaa, fill = Areaa)+
geom_line()
a |>
ggplot() +
aes(x = Year, y = Areaa)+
geom_line()
melted_degradada |>
ggplot( aes(x=Year, y=Area)) +
theme_bw() +
melted_degradada |>
ggplot( aes(x=Year, y=Area)) +
theme_bw() +
melted_degradada |>
ggplot() +
aes(x = Year, y = Areaa)+
geom_line()
a |>
ggplot() +
aes(x = Year, y = Areaa)+
geom_line()
str(a )
table(a)
a
a %>%
ggplot()+
aes(x=Year, y=Areaa)+
geom_line()
a %>%
ggplot()+
aes(x=Year, y=Areaa, color=Areaa)+
geom_line()+
transition_reveal(n_meses)
a %>%
ggplot()+
aes(x=Year, y=Areaa, color=Year)+
geom_line()
a %>%
ggplot()+
aes(x=Year, y=Areaa, color=Areaa)+
geom_line()
a
a %>%
ggplot()+
aes(x=Year, y=Areaa, color="red")+
geom_line()
a %>%
ggplot()+
aes(x=Year, y=Areaa, color="red")+
geom_line()+
ylim (0, 30000000000)
a %>%
ggplot()+
aes(x=Year, y=Areaa)+
geom_line()+
ylim (0, 30000000000)
View(degradada_p)
a <-melted_degradada  |>
group_by(Year) |>
summarise(Areaa= sum(Area)  )
